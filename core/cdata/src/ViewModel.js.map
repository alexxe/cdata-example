{"version":3,"file":"ViewModel.js","sourceRoot":"","sources":["ViewModel.ts"],"names":[],"mappings":";AAIA;IAGI,YAAsB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;QACxC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAID,gBAAgB;QACZ,IAAI,OAAO,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,IAAI,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACrC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;QAE7B,CAAC;IACL,CAAC;AAIL,CAAC;AAxBqB,iBAAS,YAwB9B,CAAA","sourcesContent":["import {IFilterDescriptor} from \"./CQuery\";\r\nimport {DataModel} from \"./DataModel\";\r\nimport {IModel} from \"./IModel\";\r\n\r\nexport abstract class ViewModel<TM extends IModel,TD extends IFilterDescriptor>  {\r\n    filter: any;\r\n    filterMap:Map<string,Function>;\r\n    constructor(protected model:DataModel<TM,TD>) {\r\n        this.filter = {};\r\n        this.filterMap = new Map();\r\n        this.initFilterMap();\r\n    }\r\n    protected abstract initFilterMap();\r\n\r\n\r\n    applyFilterState(){\r\n        let filters = Object.getOwnPropertyNames(this.filter);\r\n        for (let i = 0; i < filters.length; i++) {\r\n            let property = filters[i];\r\n            let value = this.filter[property];\r\n            let f = this.filterMap.get(property);\r\n            f.call(this.model,value);\r\n            //this.addFilter(property,value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}"]}