{"version":3,"file":"DescriptorVisitor.js","sourceRoot":"","sources":["DescriptorVisitor.ts"],"names":[],"mappings":";AAGA;IAAA;QACY,SAAI,GAAU,EAAE,CAAC;IA0C7B,CAAC;IAzCG,KAAK,CAAC,GAAO;QACT,IAAI,MAAoB,CAAC;QACzB,MAAM,GAAiB,GAAG,CAAC;QAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,CAAC;QACX,CAAC;QAED,IAAI,QAAQ,GAAmB,GAAG,CAAC;QACnC,EAAE,CAAA,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC7B,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAA,CAAC,GAAG,YAAY,KAAK,CAAC,CAAA,CAAC;YACrB,GAAG,CAAA,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;YAAA,CAAC;YACF,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,eAAe,CAAC,UAA4B;QACxC,IAAI,UAAU,GAAG,MAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QACxD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,IAAI,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,QAAQ,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;IACL,CAAC;IAGD,WAAW,CAAC,MAAmB;QAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,QAAuB;QACjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;AACL,CAAC;AA3CY,yBAAiB,oBA2C7B,CAAA","sourcesContent":["import {Methods} from \"./CQueryDescriptor\";\r\nimport {IFilterDescriptor, IMethod, IOperator} from \"./CQuery\";\r\nimport {forEach} from \"@angular/router/src/utils/collection\";\r\nexport class DescriptorVisitor {\r\n    private path:string = '';\r\n    visit(obj:any){\r\n        let method: IMethod<any>;\r\n        method = <IMethod<any>>obj;\r\n        if (method.method != null && method.value != null) {\r\n            this.visitMethod(method);\r\n            return;\r\n        }\r\n\r\n        let operator = <IOperator<any>>obj;\r\n        if(operator.operator != null && operator.value != null) {\r\n            this.visitOperator(operator);\r\n            return;\r\n        }\r\n        if(obj instanceof Array){\r\n            for(let o of obj) {\r\n                this.visit(o);\r\n            };\r\n            return;\r\n        }\r\n\r\n        this.visitDescriptor(obj);\r\n    }\r\n\r\n    visitDescriptor(descriptor:IFilterDescriptor) {\r\n        let properties = Object.getOwnPropertyNames(descriptor);\r\n        for (let i = 0; i < properties.length; i++) {\r\n            let property = properties[i];\r\n            let value = descriptor[property];\r\n            this.path = this.path + '.' + property;\r\n            this.visit(value);\r\n        }\r\n    }\r\n\r\n\r\n    visitMethod(method:IMethod<any>) {\r\n        this.visit(method.value);\r\n    }\r\n\r\n    visitOperator(operator:IOperator<any>) {\r\n        this.visit(operator.value);\r\n    }\r\n}\r\n"]}