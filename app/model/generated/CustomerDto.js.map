{"version":3,"file":"CustomerDto.js","sourceRoot":"","sources":["CustomerDto.ts"],"names":[],"mappings":";AAEA,yDAAyD;AACzD,4KAA4K;AAC5K,yDAAyD;AACzD,4HAA4H;AAE5H,iDAAiD;AAEjD;IACI;IAEA,CAAC;AAQL,CAAC;AAXY,mBAAW,cAWvB,CAAA","sourcesContent":["import {ContactDto} from \"./ContactDto\";\r\nimport {IModelEntity} from \"../../../core/cdata/src/IModelEntity\";\r\n// $Classes/Enums/Interfaces(filter)[template][separator]\r\n// filter (optional): Matches the name or full name of the current item. * = match any, wrap in [] to match attributes or prefix with : to match interfaces or base classes.\r\n// template: The template to repeat for each matched item\r\n// separator (optional): A separator template that is placed between all templates e.g. $Properties[public $name: $Type][, ]\r\n\r\n// More info: http://frhagn.github.io/Typewriter/\r\n\r\nexport class CustomerDto implements IModelEntity {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    id: number;\r\n    edvNr: number;\r\n    firma11: string;\r\n    firma21: string;\r\n    street: string;\r\n    contacts: ContactDto[];\r\n}\r\n"]}