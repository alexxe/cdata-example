{"version":3,"file":"DemoModel.js","sourceRoot":"","sources":["DemoModel.ts"],"names":[],"mappings":";AAAA,4BAAwB,gCAAgC,CAAC,CAAA;AAEzD,wBAA0C,4BAA4B,CAAC,CAAA;AAIvE,wBAA+B,qBAAS;IACpC,YAAY,IAAU,EAAC,GAAU;QAC7B,MAAM,IAAI,EAAC,GAAG,CAAC,CAAC;IACpB,CAAC;IAED,QAAQ;QACJ,IAAI,KAAK,GAAS;YACd,IAAI,EAAE,gBAAQ,CAAC,QAAQ;YACvB,KAAK,EAAC,EAAE;SACX,CAAC;QACF,IAAI,UAAU,GAAS;YACnB,IAAI,EAAC,gBAAQ,CAAC,MAAM;YACpB,KAAK,EAAC,kBAAU,CAAC,MAAM;YACvB,KAAK,EAAC;gBACF,IAAI,EAAC,gBAAQ,CAAC,MAAM;gBACpB,KAAK,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBAChD,IAAI,EAAC;oBACD,IAAI,EAAC,gBAAQ,CAAC,MAAM;oBACpB,KAAK,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;oBACnD,IAAI,EAAC;wBACD,IAAI,EAAC,gBAAQ,CAAC,MAAM;wBACpB,KAAK,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;wBACxD,IAAI,EAAC;4BACD,IAAI,EAAC,gBAAQ,CAAC,MAAM;4BACpB,KAAK,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;yBAC5D;qBAEJ;iBACJ;aACJ;SACJ,CAAA;QACD,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;QACxB,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;AAGL,CAAC;AApCY,iBAAS,YAoCrB,CAAA","sourcesContent":["import {DataModel} from \"../../core/cdata/src/DataModel\";\r\nimport {Http} from \"@angular/http\";\r\nimport {QNode, NodeType, MethodType} from \"../../core/cdata/src/QNode\";\r\nimport {DemoProjection} from \"./DemoProjection\";\r\nimport {ContactDto} from \"./generated/ContactDto\";\r\n\r\nexport class DemoModel extends DataModel<DemoProjection,ContactDto>{\r\n    constructor(http: Http,url:string) {\r\n        super(http,url);\r\n    }\r\n\r\n    getQuery() : QNode {\r\n        let query:QNode = {\r\n            Type: NodeType.Querable,\r\n            Value:\"\"\r\n        };\r\n        let projection:QNode = {\r\n            Type:NodeType.Method,\r\n            Value:MethodType.Select,\r\n            Right:{\r\n                Type:NodeType.Member,\r\n                Value:this.binding(x => x.name,x => x.firstName),\r\n                Left:{\r\n                    Type:NodeType.Member,\r\n                    Value:this.binding(x => x.nachname,x => x.lastName),\r\n                    Left:{\r\n                        Type:NodeType.Member,\r\n                        Value:this.binding(x => x.firma,x => x.customer.firma11),\r\n                        Left:{\r\n                            Type:NodeType.Member,\r\n                            Value:this.binding(x => x.firma1,x => x.customer.firma21)\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        projection.Left = query;\r\n        return projection;\r\n    }\r\n\r\n\r\n}\r\n"]}