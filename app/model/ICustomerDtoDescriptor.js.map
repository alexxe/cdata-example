{"version":3,"file":"ICustomerDtoDescriptor.js","sourceRoot":"","sources":["ICustomerDtoDescriptor.ts"],"names":[],"mappings":"AAGI,yDAAyD;AACzD,4KAA4K;AAC5K,yDAAyD;AACzD,4HAA4H","sourcesContent":["\r\n\r\n    \r\n    // $Classes/Enums/Interfaces(filter)[template][separator]\r\n    // filter (optional): Matches the name or full name of the current item. * = match any, wrap in [] to match attributes or prefix with : to match interfaces or base classes.\r\n    // template: The template to repeat for each matched item\r\n    // separator (optional): A separator template that is placed between all templates e.g. $Properties[public $name: $Type][, ]\r\n\r\n    // More info: http://frhagn.github.io/Typewriter/\r\n    import {IFilterDescriptor, IOperator, IInOperator, IMethod} from \"../../core/cdata/src/CQuery\";\r\n    import {IContactDtoDescriptor} from \"./IContactDtoDescriptor\";\r\n\r\n    export interface ICustomerDtoDescriptor extends IFilterDescriptor {\r\n\r\n        id?: IOperator<number> | IInOperator<number>;\r\n        edvNr?: IOperator<number> | IInOperator<number>;\r\n        firma1?: IOperator<string> | IInOperator<string>;\r\n        firma2?: IOperator<string> | IInOperator<string>;\r\n        street?: IOperator<string> | IInOperator<string>;\r\n        ort?: IOperator<string> | IInOperator<string>;\r\n        contacts?: IMethod<IContactDtoDescriptor>;\r\n\r\n    }\r\n"]}