{"version":3,"file":"CustomerViewModel.js","sourceRoot":"","sources":["CustomerViewModel.ts"],"names":[],"mappings":";AAAA,4BAAwB,6BAA6B,CAAC,CAAA;AAQtD,wBAAsD,yBAAyB,CAAC,CAAA;AAEhF,gCAAuC,qBAAS;IAC5C,YAAY,KAAmB;QAC3B,MAAM,KAAK,CAAC,CAAC;IAEjB,CAAC;IAED,aAAa;QACT,IAAI,aAAa,GAAkB,IAAI,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAC,CAAC,KAAS,KAAK,aAAa,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAC,kBAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;QACtH,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAC,CAAC,KAAS,KAAK,aAAa,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAC,kBAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;QACtH,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,EAAC,CAAC,KAAS,KAAK,aAAa,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAC,kBAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;QAC3H,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,EAAC,CAAC,KAAS,KAAK,aAAa,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAC,kBAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;IAC7H,CAAC;IAED,IAAI,CAAC,QAAe;QAChB,IAAI,aAAa,GAAkB,IAAI,CAAC,KAAK,CAAC;QAC9C,EAAE,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YACxB,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YACxB,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC;YAC3B,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;YAC1B,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC/C,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,QAAe;QAC/B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,oBAAoB,CAAC,QAAe;QAChC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AAIL,CAAC;AAvCY,yBAAiB,oBAuC7B,CAAA","sourcesContent":["import {ViewModel} from \"../core/cdata/src/ViewModel\";\r\nimport {ICustomerDtoDescriptor} from \"./model/ICustomerDtoDescriptor\";\r\nimport {Methods, StringMethods} from \"../core/cdata/src/CQueryDescriptor\";\r\nimport {IContactDtoDescriptor} from \"./model/IContactDtoDescriptor\";\r\nimport {CustomerDto} from \"./model/CustomerDto\";\r\nimport {CustomerModel} from \"./CustomerModel\";\r\nimport {IFilterDescriptor} from \"../core/cdata/src/CQuery\";\r\nimport {DescriptorVisitor} from \"../core/cdata/src/DescriptorVisitor\";\r\nimport {NodeType, QNode, MethodType, BinaryType} from \"../core/cdata/src/QNode\";\r\n\r\nexport class CustomerViewModel extends ViewModel<CustomerDto,ICustomerDtoDescriptor> {\r\n    constructor(model:CustomerModel) {\r\n        super(model);\r\n\r\n    }\r\n\r\n    initFilterMap() {\r\n        let customerModel = <CustomerModel>this.model;\r\n        this.filterMap.set(\"firma1\",(value:any) => customerModel.addCustomerFilter(x => x.firma1,BinaryType.Contains, value));\r\n        this.filterMap.set(\"firma2\",(value:any) => customerModel.addCustomerFilter(x => x.firma2,BinaryType.Contains, value));\r\n        this.filterMap.set(\"firstName\",(value:any) => customerModel.addContactFilter(x => x.firstName,BinaryType.Contains, value));\r\n        this.filterMap.set(\"lastName\",(value:any) => customerModel.addContactFilter(x => x.lastName,BinaryType.Contains, value));\r\n    }\r\n\r\n    sort(property:string) {\r\n        let customerModel = <CustomerModel>this.model;\r\n        if (property === \"firma1\") {\r\n            customerModel.customerSort(x => x.firma1);\r\n        }\r\n        if (property === \"firma2\") {\r\n            customerModel.customerSort(x => x.firma2);\r\n        }\r\n        if (property === \"firstName\") {\r\n            customerModel.contactSort(x => x.firstName);\r\n        }\r\n        if (property === \"lastName\") {\r\n            customerModel.contactSort(x => x.lastName);\r\n        }\r\n    }\r\n\r\n    isSortedByAscending(property:string) :boolean{\r\n        return true;\r\n    }\r\n    isSortedByDescending(property:string) :boolean{\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n}\r\n"]}