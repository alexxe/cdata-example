{"version":3,"file":"demo.component.js","sourceRoot":"","sources":["demo.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+B,eAAe,CAAC,CAAA;AAC/C,QAAO,iCAAiC,CAAC,CAAA;AACzC,QAAO,4BAA4B,CAAC,CAAA;AACpC,QAAO,yBAAyB,CAAC,CAAA;AACjC,QAAO,2BAA2B,CAAC,CAAA;AACnC,qBAAmB,eAAe,CAAC,CAAA;AACnC,kCAAgC,qBAAqB,CAAC,CAAA;AACtD,8BAA4B,iBAAiB,CAAC,CAAA;AAQ9C;IAcE,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,6BAAa,CAAC,IAAI,EAAC,mDAAmD,CAAC,CAAC;QAC7F,IAAI,CAAC,SAAS,GAAG,IAAI,qCAAiB,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAbD,sBAAI,+BAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC7B,CAAC;;;OAAA;IAGD,sBAAI,iCAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAC/B,CAAC;;;OAAA;IAQM,+BAAO,GAAd;QACE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAnBD;QAAC,YAAK,EAAE;;6CAAA;IAKR;QAAC,YAAK,EAAE;;+CAAA;IAdV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,2BAA2B;SAEzC,CAAC;;qBAAA;IA8BF,oBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,qBAAa,gBA6BzB,CAAA","sourcesContent":["import {Component, Input} from '@angular/core';\r\nimport 'rxjs/add/observable/fromPromise';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport {Http} from \"@angular/http\";\r\nimport {CustomerViewModel} from \"./CustomerViewModel\";\r\nimport {CustomerModel} from \"./CustomerModel\";\r\n\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  templateUrl: './app/demo.component.html'\r\n\r\n})\r\nexport class DemoComponent {\r\n  public dataModel: CustomerModel;\r\n  public viewModel: CustomerViewModel;\r\n\r\n  @Input()\r\n  get data() {\r\n    return this.dataModel.data;\r\n  }\r\n\r\n  @Input()\r\n  get filter() {\r\n    return this.viewModel.filter;\r\n  }\r\n\r\n  constructor(private http: Http) {\r\n    this.dataModel = new CustomerModel(http,\"http://localhost/Example.WebApi/api/Model/Default\");\r\n    this.viewModel = new CustomerViewModel();\r\n    this.refresh();\r\n  }\r\n\r\n  public refresh() {\r\n    this.viewModel.setFilters(this.dataModel);\r\n    this.dataModel.refresh();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]}